ui-select.tags-dropdown(
ng-model="self.ngModel",

tabindex="0",
sortable="true",

multiple,
tribe-select-multiple-focus-helper,

tagging="stringToTagReference",
tagging-tokens="ENTER|,",

name="{{fieldName}}",

tribe-tagging-validator,
validation-key="name",
on-remove="refreshDuplicateValidation($select.selected)",

tribe-tags-on-blur,
tribe-select-open-on-focus,
tribe-select-prevent-tab,
tribe-select-on-esc=".modal",
)
  ui-select-match(
  class="{{$item.$$invalid ? 'invalid' : ''}}",
  placeholder="Select tag..."
  ) {{$item.name}}
  ui-select-choices.has-header.has-footer(
  ng-show="$select.items.length &&",
  repeat="tag in availableTags",

  select-choices-header="Suggestions",
  select-choices-footer="{{$select.items.length + $select.selected.length}} of {{$$total}} tags are displayed {{ $select.items.length + $select.selected.length < $$total ? '(Scroll for more)' : '(All tags loaded)' }}",

  refresh="loadTagsProposals($select.search)",
  refresh-delay="400",
  position="{{position}}"

  tribe-select-fetch-on-select,
  fetch-items-count="10",

  tribe-select-fetch-on-open="resetTagsProposals",
  tribe-select-redraw-on-tagging
  )
    div(
    tribe-activate-hover="tag"
    )
      //- tag
      span(
      ng-if="!tag.isTag",
      ng-bind-html="tag.name + tag.isTag| highlight: $select.search"
      )
      //- new
      span(
      ng-if="tag.isTag && !tag.$$duplicate",
      ng-bind-html="(tag.name | highlight: $select.search) + ' (new)'"
      )
      //- duplicate
      span(
      ng-if="tag.isTag && tag.$$duplicate",
      ng-bind-html="(tag.name | highlight: $select.search)"
      )
    tribe-select-pagination-loader(
    ng-if="$last",
    paging-state="$$pagingState",
    paging-busy="$$pagingBusy",
    refresh="loadTagsProposals($select.search)"
    )
p.validation-message(
ng-show="form[fieldName].$error.tagging && (!form[fieldName].$pristine || form.$submitted)"
) {{validationErrorMessage}}
